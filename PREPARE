# -*- tcl -*-
# prepare module 'Trf' for distribution

# do it ourself, must not be included into digest files!
mExclude PREPARE

# O. insert various information into some files
#    (version, patchlevel, current date)


set mInfo(@TRF_VERSION@)     $mInfo(@mVersion@)
set mInfo(@configure_input@) "Distributed at $mInfo(@mDate@)"

file copy generic/pkgIndex.tcl.in win/pkgIndex.tcl

mInsertInfo \
	README DESCRIPTION PORTING                 \
	doc/install.tex doc/man.tex                 \
	generic/transform.h generic/patchlevel.h     \
	mac/README                                    \
	unix/README unix/configure.in unix/Makefile.in

set mInfo(@TRF_LIB_FILE@)    "trf$mInfo(@mShortDosVersion@).dll"
mInsertInfo \
	win/README  win/pkgIndex.tcl  win/makefile.vc

mGetDescription
mExpandUrls
mGenerateLSM
mGenerateANNOUNCE



# I.   clean documentation
# I.a  remove inofficial documents

eval mExclude \
	mails patches/v8.0a1 patches/v8.0a2 patches/v8.0b1 patches/v8.0b2 \
	[glob patches/v8.0/*.orig] \
	[glob patches/nijtmans.*] DEPENDS doc/file doc/delete \
	doc/FUN doc/ascii.man doc/ascii85 doc/scratch-pad \
	doc/code34 doc/Notes doc/ToDo doc/trf.def \
	doc/hash.operation doc/INSTALL doc/INSTALL.optional \
	doc/ROADMAP doc/speed

# I.b  generate official manual, diverse variants (dvi, ps)
mLog info generating manual variants (dvi, ps)


cd doc
file mkdir man html html/install html/man html/capi

catch {exec latex man}
catch {exec latex man}
catch {exec latex man}
catch {exec dvips man.dvi -o man.ps}

catch {exec latex install}
catch {exec latex install}
catch {exec latex install}
catch {exec dvips install.dvi -o install.ps}

mExclude defs.aux man.idx


# I.c  generate official manual of c-level interface
#verbose {generate manual of c-level interface}

# pwd = doc

# manual pages of C API out of header comments (c2man)
mLog info generating manpages
set fail [catch {
    cd ..
    set ipath [file join [file dirname [file dirname [info library]]] include]
    set src   [file join generic transform.h]

    exec c2man -U__GNUC__ -odoc/man -I$ipath -v $src 2>/dev/null >/dev/null
    #          ~~~~~~~~~~ => remove gcc specific syntax from header files
    cd doc
} msg]	;#{}
if {$fail} {mLog error $msg}

# same as above, but hyperized.
mLog info generating hyperized manpages
set fail [catch {
    cd ..
    set ipath [file join [file dirname [file dirname [info library]]] include]
    set src   [file join generic transform.h]

    exec c2man -U__GNUC__ -odoc/html/capi -I$ipath -Th $src 2>/dev/null >/dev/null
    #          ~~~~~~~~~~ => remove gcc specific syntax from header files
    cd doc
} msg]	;#{}
if {$fail} {mLog error $msg}

# generate base page for c-api documentation
exec ./capibase > html/capi.html
#mExclude capibase
file rename html/capi.html html/capi/capi.html


mLatex2html \
	-title    {man "Trf Manual"          install "Trf Installation manual"} \
	-up       {man "../../../tcltk.html" install "../man/man.html"}         \
	-up-title {man "Tcl/Tk"              install "Trf Manual"}
	\
	-nav      arrows \
	-htmldir  html   \
	\
	man.tex install.tex

# -up-man assumes that the document is part of the
# hierarchy at http://www.westend.com/~kupries
# It resides at '.../doc/trf/man/man.html'
# The tcltk page is 'tcltk.html'

# compact the pages a little
eval exec html_crunch [glob html/install/*.html]
eval exec html_crunch [glob html/capi/*.html]
eval exec html_crunch [glob html/man/*.html]


# remove temp files from latex runs
file delete install.aux install.log install.toc
file delete man.aux man.log man.toc

cd ..
# pwd = root of distribution



# II. security measures
mLog info Security measures

# enable checking at target (do this before generation of manifest)
cd tests
file rename ________ ________.test
cd ..
# pwd = root of distribution


# generate configure script to be used
mConfigure unix



# generate message digests for all files and several digests
mLog info Generating digests (please wait)...

set files [exec /usr/bin/find . -type f -print]
regsub -all "\n" $files { } files

foreach md {crc crc-zlib adler md5 sha haval ripemd128 ripemd160} {
    mLog info $md ...
    catch {eval exec md -a $md $files > digests.$md}
}


# generate standard permissions.
mNormalPermissions [pwd]

# and now the tuning
exec      chmod u+w unix mac win tests
eval exec chmod u+x unix/configure [glob tools/*]


# should secure digest files and checker application against
# tampering (-> PGP signature)
