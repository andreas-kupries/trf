# -*- tcl -*-
# prepare module 'Trf' for distribution

# do it ourself, must not be included into digest files!
mExclude PREPARE customers


# O. insert various information into some files
#    (version, patchlevel, current date)


set mInfo(@TRF_VERSION@)     $mInfo(@mVersion@)
set mInfo(@configure_input@) "Distributed at $mInfo(@mDate@)"

file copy generic/pkgIndex.tcl.in win/pkgIndex.tcl

mInsertInfo \
	README DESCRIPTION PORTING                 \
	doc/nodes/home.node doc/nodes/install.node doc/nodes/intro.node \
	generic/transform.h generic/patchlevel.h     \
	mac/README                                    \
	unix/README unix/configure.in unix/Makefile.in

set mInfo(@TRF_LIB_FILE@)    "trf$mInfo(@mShortDosVersion@).dll"
mInsertInfo \
	win/README  win/pkgIndex.tcl  win/makefile.vc

mGetDescription
mExpandUrls
mGenerateLSM
mGenerateANNOUNCE



# I.   clean documentation
# I.a  remove inofficial and old documents

eval mExclude \
	mails patches/v8.0a1 patches/v8.0a2 patches/v8.0b1 patches/v8.0b2 \
	[glob patches/v8.0/*.orig] \
	doc/install.tex doc/man.tex doc/html.sty doc/defs.tex \
	[glob patches/nijtmans.*] DEPENDS doc/file doc/delete \
	doc/FUN doc/ascii.man doc/ascii85 doc/scratch-pad \
	doc/code34 doc/Notes doc/ToDo doc/trf.def \
	doc/hash.operation doc/INSTALL doc/INSTALL.optional \
	doc/ROADMAP doc/speed doc/trf.xpm

# I.b  generate official manual, diverse variants (dvi, ps)
mLog info generating manual 

cd doc
file mkdir man html html/capi html/img


# I.c  generate official manual of c-level interface
#verbose {generate manual of c-level interface}

# pwd = doc

# manual pages of C API out of header comments (c2man)
mLog info generating manpages
set fail [catch {
    cd ..
    set ipath [file join [file dirname [file dirname [info library]]] include]
    set src   [file join generic transform.h]

    exec c2man -U__GNUC__ -odoc/man -I$ipath -v $src 2>/dev/null >/dev/null
    #          ~~~~~~~~~~ => remove gcc specific syntax from header files
    cd doc
} msg]	;#{}
if {$fail} {mLog error $msg}

# same as above, but hyperized.
mLog info generating hyperized manpages
set fail [catch {
    cd ..
    set ipath [file join [file dirname [file dirname [info library]]] include]
    set src   [file join generic transform.h]

    exec c2man -U__GNUC__ -odoc/html/capi -I$ipath -Th $src 2>/dev/null >/dev/null
    #          ~~~~~~~~~~ => remove gcc specific syntax from header files
    cd doc
} msg]	;#{}
if {$fail} {mLog error $msg}

# generate base page for c-api documentation
exec ./capibase > nodes/capi.node

#mExclude capibase
#file rename html/capi.html html/capi/capi.html


# Now generate documentation for linkage into my
# site and standalone distribution

# -up-man assumes that the document is part of the
# hierarchy at http://www.westend.com/~kupries
# It resides at '~kupries/doc/trf/index.html'
# The tcltk page is '~kupries/tcltk.html'

mLog info generating documentation tree

exec nodeCompile westend html nodes 

cd ..
mDocTGZArchive doc/html
cd doc

eval file delete -force [glob html/*.html]


file delete -force nodes/a_up.def
exec nodeCompile     plain html          nodes
exec nodeMakeSitemap plain html trf_home nodes


mExclude nodes capibase

cd ..
# pwd = root of distribution

# remove crypto directories
mExclude generic/blowfish generic/idea generic/rc4 generic/safer


# II. security measures
mLog info Security measures

# enable checking at target (do this before generation of manifest)
cd tests
file rename ________ ________.test
cd ..
# pwd = root of distribution


# generate configure script to be used
mConfigure unix



# generate message digests for all files and several digests
mLog info Generating digests (please wait)...

set files [exec /usr/bin/find . -type f -print]
regsub -all "\n" $files { } files

foreach md {crc crc-zlib adler md5 sha haval ripemd128 ripemd160} {
    mLog info $md ...
    catch {eval exec md -a $md $files > digests.$md}
}


# generate standard permissions.
mNormalPermissions [pwd]

# and now the tuning
exec      chmod u+w unix mac win tests
eval exec chmod u+x unix/configure [glob tools/*]


# should secure digest files and checker application against
# tampering (-> PGP signature)
