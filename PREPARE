# -*- tcl -*-
# prepare module 'Trf' for distribution


# O. insert various information into some files
#    (version, patchlevel, current date)

set date       [date now]
set long_date  [clock format [clock scan $date] -format {%B %d, %Y}]
set short_date [string toupper [clock format [clock scan $date] -format {%d-%b-%Y}]]

replace_in_file LSM                  @DATE@ $short_date
replace_in_file DESCRIPTION          @DATE@ $long_date
replace_in_file README               @DATE@ $long_date
replace_in_file generic/transform.h  @DATE@ $long_date
replace_in_file generic/patchlevel.h @DATE@ $long_date

set major [lindex [split ${the-version} .] 0]
set minor [lindex [split ${the-version} .] 1]

replace_in_file README               @VERSION@ ${the-patchlevel}
replace_in_file ANNOUNCE             @VERSION@ ${the-patchlevel}
replace_in_file LSM                  @VERSION@ ${the-patchlevel}
replace_in_file DESCRIPTION          @VERSION@ ${the-patchlevel}

replace_in_file generic/transform.h  @VERSION@       ${the-version}
replace_in_file generic/transform.h  @MAJOR_VERSION@ $major
replace_in_file generic/transform.h  @MINOR_VERSION@ $minor

replace_in_file unix/configure.in    @VERSION@       ${the-version}
replace_in_file unix/configure.in    @MAJOR_VERSION@ $major
replace_in_file unix/configure.in    @MINOR_VERSION@ $minor

replace_in_file generic/patchlevel.h @VERSION@ ${the-patchlevel}

replace_in_file mac/README           @DATE@    $long_date
replace_in_file mac/README           @VERSION@ ${the-patchlevel}

replace_in_file win/README           @DATE@    $long_date
replace_in_file win/README           @VERSION@ ${the-patchlevel}

replace_in_file unix/README          @DATE@    $long_date
replace_in_file unix/README          @VERSION@ ${the-patchlevel}




# I.   clean documentation
# I.a  remove inofficial documents
verbose {remove inofficial documents}

eval file delete -force mails [glob patches/nijtmans.*]

cd doc/speed
exec /bin/ln -s		../../tests/sha.test.vec f1000000
cd ..

# pwd = doc
file delete FUN ascii.man ascii85 scratch-pad code34 Notes ToDo trf.def hash.operation

# I.b  generate official manual, diverse variants (dvi, ps)
verbose {generate official manual}

# pwd = doc
catch {exec latex man}
catch {exec latex man}
catch {exec latex man}
catch {exec dvips man.dvi -o man.ps}
file delete man.aux man.log man.toc



# I.c  generate official manual of c-level interface
#verbose {generate manual of c-level interface}

# pwd = doc
file mkdir man
catch {
    set ipath [file join [file dirname [file dirname [info library]]] include]
    set src   [file join [pwd] .. generic transform.h]

    exec c2man -oman -I$ipath -v $src
}

cd ..
# pwd = root of distribution



# II. security measures
verbose {security measures}

# enable checking at target (do this before generation of manifest)
cd tests
file rename ________ ________.test
cd ..
# pwd = root of distribution


# generate configure script to be used
cd unix
exec autoconf
cd ..


# generate message digests for all files and several digests
verbose {	generating digests (please wait)}
set files [exec /usr/bin/find . -type f -print]
regsub -all "\n" $files { } files

foreach md {crc crc-zlib adler md5 sha haval} {
    verbose "		$md ..."
    catch {eval exec md -a $md -z $files > digests.$md}
}

# should secure digest files and checker application against
# tampering (-> PGP signature)

# III.  record distributed files
verbose {produce manifest}
exec tools/get-manifest	Trf

