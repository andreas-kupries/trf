# -*- tcl -*-
# prepare module 'Trf' for distribution


# O. insert various information into some files
#    (version, patchlevel, current date)


set mInfo(@TRF_VERSION@)     $mInfo(@mVersion@)
set mInfo(@configure_input@) "Distributed at $mInfo(@mDate@)"
set mInfo(@TRF_LIB_FILE@)    "trf$mInfo(@mShortDosVersion@).dll"

file copy generic/pkgIndex.tcl.in win/pkgIndex.tcl

mInsertInfo \
	ANNOUNCE README LSM DESCRIPTION PORTING \
	doc/install.tex doc/man.tex \
	generic/transform.h generic/patchlevel.h \
	mac/README \
	unix/README unix/configure.in \
	win/README win/pkgIndex.tcl win/makefile.vc




# I.   clean documentation
# I.a  remove inofficial documents

eval mExclude mails patches/v8.0a1 [glob patches/nijtmans.*] DEPENDS

cd doc/speed
exec /bin/ln -s		../../tests/sha.test.vec f1000000
cd ..

# pwd = doc
mExclude file delete FUN ascii.man ascii85 scratch-pad code34 Notes ToDo trf.def hash.operation INSTALL INSTALL.optional

# I.b  generate official manual, diverse variants (dvi, ps)
mLog log info generating manual variants (dvi, ps)

# pwd = doc
catch {exec latex man}
catch {exec latex man}
catch {exec latex man}
catch {exec dvips man.dvi -o man.ps}
file delete man.aux man.log man.toc

catch {exec latex install}
catch {exec latex install}
catch {exec latex install}
catch {exec dvips install.dvi -o install.ps}
file delete install.aux install.log install.toc



# I.c  generate official manual of c-level interface
#verbose {generate manual of c-level interface}
mLog log info generating manpages

# pwd = doc
file mkdir man
catch {
    set ipath [file join [file dirname [file dirname [info library]]] include]
    set src   [file join [pwd] .. generic transform.h]

    exec c2man -oman -I$ipath -v $src
}

cd ..
# pwd = root of distribution



# II. security measures
mLog log info Security measures

# enable checking at target (do this before generation of manifest)
cd tests
file rename ________ ________.test
cd ..
# pwd = root of distribution


# generate configure script to be used
mConfigure unix



# generate message digests for all files and several digests
mLog log info Generating digests (please wait)...

set files [exec /usr/bin/find . -type f -print]
regsub -all "\n" $files { } files

foreach md {crc crc-zlib adler md5 sha haval} {
    mLog log info $md ...
    catch {eval exec md -a $md $files > digests.$md}
}


# generate standard permissions.
mNormalPermissions [pwd]


# should secure digest files and checker application against
# tampering (-> PGP signature)
