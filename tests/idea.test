# -*- tcl -*-
# Commands covered:	IDEA (International Data Encryption Algorithm)
#
# This file contains a collection of tests for one or more of the commands
# the TRF extension. Sourcing this file into Tcl runs the tests and
# generates output for errors.  No output means no errors were found.
#
# Copyright (c) 1996 Andreas Kupries (a.kupries@westend.com)
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# $Id$

if {[string compare test [info procs test]] == 1} then {source defs}


# used keys
#
# keyB was generated from string 'AaBcDeFgHiJkLmNoPqRsTuVwXyZz0123456789'
# see code of external 'idea' command for method of conversion (subdir 'idea').
#
defblock keyA	{0011 2233 4455 6677 8899 aabb ccdd eeff}
defblock keyB	{b0d8 4bc5 b885 6663 6de5 99cc 23d8 109a}
defblock iv	{0000 0000 0000 0001}

# test-cases taken from subdirectory 'idea'

defblock in {
    00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f
    10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f
    20 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d 2e 2f
    30 31 32 33 34 35 36 37 38 39 3a 3b 3c 3d 3e 3f
    40 41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f
    50 51 52 53 54 55 56 57 58 59 5a 5b 5c 5d 5e 5f
    60 61 62 63 64 65 66 67 68 69 6a 6b 6c 6d 6e 6f
    70 71 72 73 74 75 76 77 78 79 7a 7b 7c 7d 7e 7f
    80 81 82 83 84 85 86 87 88 89 8a 8b 8c 8d 8e 8f
    90 91 92 93 94 95 96 97 98 99 9a 9b 9c 9d 9e 9f
    a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 aa ab ac ad ae af
    b0 b1 b2 b3 b4 b5 b6 b7 b8 b9 ba bb bc bd be bf
    c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 ca cb cc cd ce cf
    d0 d1 d2 d3 d4 d5 d6 d7 d8 d9 da db dc dd de df
    e0 e1 e2 e3 e4 e5 e6 e7 e8 e9 ea eb ec ed ee ef
    f0 f1 f2 f3 f4 f5 f6 f7 f8 f9 fa fb fc fd fe ff
}

defblock outA {
    ed 73 22 71 a7 b3 9f 47 5b 4b 2b 67 19 f1 94 bf
    0d e5 45 c6 d8 fb 34 51 92 63 2f ec 4f 8a 06 53
    e0 41 27 1c 64 ec 87 2a 8f 44 22 89 7d ea 6f 5f
    b3 7e 3f e7 4e 75 55 4f 6f c4 90 f4 b1 36 53 4b
    ee 3d a7 fa 68 2b f8 ad d9 1a 18 03 65 91 45 76
    19 b8 58 ba e9 80 db 4c 74 a7 7e 78 25 14 63 9d
    a3 71 5b 97 9e 9d 48 c5 de 41 8c 17 d7 e6 1d 7e
    4c 5a d1 9d 72 3e 49 dc bd 6e e1 33 d0 48 d5 99
    ab a0 35 1e b8 26 5b 17 61 08 de 6c f8 23 d6 e4
    86 b9 44 bb 55 64 b7 a7 69 39 b3 8c be 62 f0 ee
    38 82 31 9b a2 e0 58 21 ed 2b 66 d7 05 82 8c 40
    0d 7b ae 31 1f d7 60 d4 96 dc 69 72 e8 7a 80 b5
    01 3a 71 c2 f0 51 8f ae 19 db 8d c8 7f ea cf df
    65 ec fb ad 9b 44 32 4d 11 d0 eb fc 76 bd dd 72
    9d aa 75 87 34 05 15 25 f1 ad d1 b7 bb 80 be 5d
    b8 bc 6e d5 c8 99 26 5d 2b cf ad 1f c6 d4 28 7d
}

defblock outB {
    c5 6b 0e d9 ed 0f 1c 99 26 15 6a 86 17 14 93 f4
    98 dd c0 50 32 f7 33 6a cb 85 7a 40 37 21 c9 a9
    6e c5 aa 5a f2 bf 4b f4 5e 38 6c 33 d0 6a 59 bb
    6d 8b 0d 9f 35 15 2b 01 cf 07 0a 35 a6 02 da 62
    d9 74 39 8f af 8b 2c 60 80 dc cf e4 62 3f 86 ca
    f4 b4 ad 5c 2b ea 35 36 62 e9 fb 69 81 c1 c0 a3
    8c 56 1a e1 be 44 08 67 a8 8a 54 58 96 89 ea 5b
    01 87 c3 cd dc 5b 35 00 2d bd aa 6d 76 61 7c 5c
    8c 2c 17 de 3a 0f fd 36 44 04 d9 ca 4d e9 ee 12
    b8 07 7d 3c 48 53 69 03 53 4d f3 22 01 b2 b5 31
    1d 01 97 8f b8 36 e0 75 71 08 04 d4 eb fd e3 c3
    38 88 da 81 95 bc c1 e9 e3 1a 88 d5 cd 0b 31 3f
    8f b6 28 1f 4f 3a 20 38 2e 9f 9a 87 6d 4f 10 63
    aa 3c d6 b1 90 54 65 2e bb a0 f9 c5 c1 73 c6 76
    c3 eb 33 32 70 24 8f a1 2a 9e 67 2d 50 6b fc 51
    e3 20 1c f2 88 e3 bf ee e6 9b aa 59 16 21 26 37
}

defblock outC {
    d4 7a 64 fd 81 66 c6 3b 2f 6a 00 53 c5 d6 b5 0a
    cc b5 00 33 20 14 54 0e 11 57 d2 a7 aa ae 4b a2
    da 17 fa 03 13 af d0 d7 ee b2 2a 25 e7 70 bc 0b
    d0 fc dc f6 b5 07 c5 55 82 0c ae 42 55 71 e7 16
    10 db cb 56 cb 94 18 0c 38 a7 95 e5 bc 4e 02 62
    cb 31 7f 2c ec c1 30 8a 13 ce c9 d8 6e 33 2b b1
    58 21 82 01 40 29 0b 2b 74 27 68 ac eb 3e 18 3f
    dd e7 db 76 24 01 89 b3 85 39 50 e8 5b c5 b0 f2
    41 e3 f6 93 1c 36 05 ae bc 78 92 fb 46 82 69 87
    53 e5 4c 86 35 a9 bb d3 fd 7f dd 15 bb 4c 27 e6
    85 4f d5 ac 96 bd a1 b7 d8 72 1e 77 eb 38 bf c8
    68 c9 e0 f7 4e 1b 0f 13 67 13 c0 a6 28 15 30 f7
    e4 e8 99 d5 57 7d 3a 26 03 d8 77 e1 63 29 7e b8
    c5 39 ae 2a 39 58 2f 31 fc 16 9a 9c 7e 6b 4e 96
    ae 30 a5 60 37 6c df 61 00 a6 16 f5 24 34 bf 74
    44 56 23 9b 2d 7a ba fd cc 00 11 a5 0d 2c a1 cb
}


defblock outD {
    cc e1 e1 63 38 7e 01 55 bd 3b 2e 2f a8 52 e8 6a
    cf 4d 17 44 4d 45 87 f8 5f 67 50 c0 16 c2 97 2c
    8e bf 7b bd bf 41 e9 34 cb 84 b0 5f d9 3f 26 8e
    36 3d 2f ee 53 91 92 dc 7e 76 05 d5 d5 31 1e c4
    17 a0 af 99 69 af ac c9 37 97 a7 eb 30 69 c9 a5
    f9 b2 cf bc 49 62 0f 34 51 ee 0c 9c 46 0d 23 b9
    f4 3c e3 4e 9c e4 fc 6b 00 bf 92 7d 27 ca 13 b9
    01 c6 6f f5 33 e4 43 62 57 4e ef 90 76 0b 96 3b
    0b b5 83 9a 12 65 e7 9c f7 98 8a c4 c3 98 b7 8e
    15 13 cc 57 65 3f 7d 0f fc bb 8d 1b 73 c4 31 bd
    56 4d 0e 08 33 0a 68 22 4c d3 8f 5a 86 f5 8e 4c
    36 72 6b 2e 73 10 b8 33 ab a3 7d 62 76 ae 45 02
    b5 c5 dc 48 7e d3 1e 8c 44 dd 83 02 18 f0 f1 de
    a8 45 9a be aa a7 64 76 aa c6 e3 b2 f9 a0 55 6e
    4a da 0e 37 19 d8 86 51 ed 65 12 33 f2 27 1c bd
    25 58 db 88 f6 fa aa 07 19 d6 de 05 f0 af 61 7a
}


defblock outE {
    cc e1 e1 63 38 7e 01 55 32 8d 69 8f 9f 7c 2e 5d
    19 ca 9a 7e 9e fe 97 dd 22 34 99 17 fa 26 2e f8
    c7 b8 01 05 03 2f a2 fb fe ad 65 00 5a 15 df 39
    59 71 99 26 d6 db 36 b0 f0 3c a8 57 cb 85 16 e2
    c6 b3 2d ce 86 90 ac e2 99 03 0f 3c 69 ec db d8
    d2 3a d4 bd 15 b4 7a 77 46 87 3c 82 e4 22 5d b9
    0d 27 f7 3f 04 b6 0a 6a a2 64 28 32 0a ed 3f 77
    3d f7 9a fd 00 4f 85 5e 22 70 f2 ac 57 ef 8d e9
    69 44 4c c1 15 39 5e c6 20 f6 dd 33 19 c3 b6 d7
    b5 b5 5b de 23 5a 2e 03 5f ea 20 32 97 89 88 5e
    28 9a f9 75 97 29 92 72 54 22 70 cf 17 f3 c3 1c
    4c cc d1 6d f2 a4 37 4a 94 10 6c f2 02 67 dc f6
    50 b6 99 96 10 59 d0 fe 78 0f e3 2c e8 ae 50 d7
    03 62 69 d5 c2 97 14 26 d6 af b9 6e f1 05 72 8f
    2a 1c 14 57 cf ea e1 70 d0 a2 48 0f 4c 0e 03 c9
    25 31 0e 75 47 6a 37 6b 37 23 b2 9a 61 d3 46 56
}


# -- test section --

if {[info tclversion] < 8.0} {
    test idea-2.0-7.6 {idea ecb encryption} {
	exec_bc idea $keyA {} $in {-dir encrypt -key @key -mode ecb @in @out}
    } [string toupper $outA] ; # {}

    test idea-2.1-7.6 {idea ecb encryption} {
	exec_bc idea $keyB {} $in {-dir encrypt -key @key -mode ecb @in @out}
    } [string toupper $outB] ; # {}

    test idea-3.0-7.6 {idea cbc encryption} {
	exec_bc idea $keyA $iv $in {-dir encrypt -key @key -mode cbc -iv @iv @in @out}
    } [string toupper $outC] ; # {}

    test idea-3.1-7.6 {idea cbc decryption} {
	exec_bc idea $keyA $iv $outC {-dir decrypt -key @key -mode cbc -iv @iv @in @out}
    } [string toupper $in] ; # {}

    test idea-4.0-7.6 {idea cfb encryption} {
	exec_bc idea $keyA $iv $in {-dir encrypt -key @key -mode cfb -shift 8 -iv @iv @in @out}
    } [string toupper $outD] ; # {}

    test idea-4.1-7.6 {idea cfb decryption} {
	exec_bc idea $keyA $iv $outD {-dir decrypt -key @key -mode cfb -shift 8 -iv @iv @in @out}
    } [string toupper $in] ; # {}

    test idea-5.0-7.6 {idea ofb encryption} {
	exec_bc idea $keyA $iv $in {-dir encrypt -key @key -mode ofb -shift 8 -iv @iv @in @out}
    } [string toupper $outE] ; # {}

    test idea-5.1-7.6 {idea ofb decryption} {
	exec_bc idea $keyA $iv $outE {-dir decrypt -key @key -mode ofb -shift 8 -iv @iv @in @out}
    } [string toupper $in] ; # {}


} else {
    foreach v {in outA outB outC outD outE keyA keyB iv} {
	set b$v [hex -mode decode [set $v]]
    }

    test idea-2.0-8.x {idea ecb encryption} {
	hex -m e [idea -dir encrypt -key $bkeyA -mode ecb $bin]
    } [string toupper $outA] ; # {}

    test idea-2.1-8.x {idea ecb encryption} {
	hex -m e [idea -dir encrypt -key $bkeyB -mode ecb $bin]
    } [string toupper $outB] ; # {}

    test idea-3.0-8.x {idea cbc encryption} {
	hex -m e [idea -dir encrypt -key $bkeyA -mode cbc -iv $biv $bin]
    } [string toupper $outC] ; # {}

    test idea-3.1-8.x {idea cbc decryption} {
	hex -m e [idea -dir decrypt -key $bkeyA -mode cbc -iv $biv $boutC]
    } [string toupper $in] ; # {}

    test idea-4.0-8.x {idea cfb encryption} {
	hex -m e [idea -dir encrypt -key $bkeyA -mode cfb -shift 8 -iv $biv $bin]
    } [string toupper $outD] ; # {}

    test idea-4.1-8.x {idea cfb decryption} {
	hex -m e [idea -dir decrypt -key $bkeyA -mode cfb -shift 8 -iv $biv $boutD]
    } [string toupper $in] ; # {}

    test idea-5.0-8.x {idea ofb encryption} {
	hex -m e [idea -dir encrypt -key $bkeyA -mode ofb -shift 8 -iv $biv $bin]
    } [string toupper $outE] ; # {}

    test idea-5.1-8.x {idea ofb decryption} {
	hex -m e [idea -dir decrypt -key $bkeyA -mode ofb -shift 8 -iv $biv $boutE]
    } [string toupper $in] ; # {}

}


# remove globals
unset  in outA outB outC outD outE keyA keyB iv
