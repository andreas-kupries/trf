# -*- tcl -*-
# Commands covered:	common behaviour of all block ciphers.
#
# This file contains a collection of tests for one or more of the trf
# commands of the TRF extension. Sourcing this file into Tcl runs the
# tests and generates output for errors.  No output means no errors were
# found.
#
# Copyright (c) 1997 Andreas Kupries (a.kupries@westend.com)
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# $Id$

if {[string compare test [info procs test]] == 1} then {source defs}

# block ciphers: des, idea, blowfish

foreach {bc bsize minksize} {
    des      8  8
    idea     8 16
    blowfish 8  1
} {
    set keyshort [hex -mode decode [string_rep [expr {$minksize - 1}] AA]]
    set key      [hex -mode decode [string_rep $minksize AA]]
    set ivshort  [hex -mode decode AA]
    set iv       [hex -mode decode [string_rep $bsize AA]]
    set data     [hex -mode decode [string_rep $bsize FF]]
    set shiftl   [expr {$bsize - 1}]
    set shifth   [expr {$bsize + 1}]

    test $bc-1.0 {data dependent argument errors} {
	catch {$bc -out stdout -dir encrypt -mode ecb -key $keyshort $data} msg
	set msg
    } {key to short}

    test $bc-1.1 {data dependent argument errors} {
	catch {$bc -out stdout -dir encrypt -mode cbc -key $key $data} msg
	set msg
    } {iv not specified for stream mode}

    test $bc-1.2 {data dependent argument errors} {
	catch {$bc -dir encrypt -mode cbc -key $key -iv $ivshort $data} msg
	set msg
    } {iv to short}

    test $bc-1.3 {data dependent argument errors} {
	catch {$bc -dir encrypt -mode cfb -key $key -iv $iv $data} msg
	set msg
    } {shift not specified for feedback mode}

    test $bc-1.4 {data dependent argument errors} {
	catch {$bc -dir encrypt -mode cfb -shift 0 -key $key -iv $iv $data} msg
	set msg
    } {shift must be > 0}

    test $bc-1.5 {data dependent argument errors} {
	catch {$bc -dir encrypt -mode cfb -shift $shiftl -key $key -iv $iv $data} msg
	set msg
    } {shift not a divisor of blocksize}

    test $bc-1.6 {data dependent argument errors} {
	catch {$bc -dir encrypt -mode cfb -shift $shifth -key $key -iv $iv $data} msg
	set msg
    } {shift to large (> blocksize)}
}
