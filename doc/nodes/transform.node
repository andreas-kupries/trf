# -*- tcl -*-
# general transform

node trf_transform {
    title       "Trf: The transform command"
    shortTitle  "transform"
    description "Trf commands: transform"
    parent      trf_misc

    contents {
	p "Options understood by ``transform''are:"

	table {
	    defrow -mode {
		p "
		Allowed arguments are ``read'', ``write'' and all
		unique abbreviations of these. This option is relevant
		and required only for immediate operation. It
		determines the operations to execute. "
	    }
	    defrow -command {
		p "
		Its specification is always required, and interpreted
		as the script to execute on behalf of the
		channel filter."

		p "
		The system will append two arguments to the script
		before execution, the name of the operation and a
		buffer to operate on."
	    }
	}

	p "The operations and their meaning are:"

	table border {
	    tr valign=top {Operation Meaning}
	    tr valign=top {
		create/write {
		    Initialize state of transformation for writing into channel.
		    The buffer is irrelevant, and empty. A return value is
		    ignored. First call for writing part.
		}
	    }
	    tr valign=top {
		delete/write {
		    Cleanup state of transformation for writing into channel.
		    The buffer is irrelevant, and empty. A return value is
		    ignored. Last call for writing part.
		}
	    }
	    tr valign=top {
		write {
		    Execute write transformation on the given buffer. The return
		    value is interpreted as transformation result.
		}
	    }
	    tr valign=top {
		flush/write {
		    Flush out all buffers internal to the transformation. The
		    given buffer is empty. The return value is interpreted as
		    transformation result.
		}
	    }
	    tr valign=top {
		clear/write {
		    Cleanup state of transformation for writing into channel.
		    The buffer is irrelevant, and empty. A return value is
		    ignored.
		}
	    }
	    tr valign=top {
		create/read {
		    Initialize state of transformation for read from channel.
		    The buffer is irrelevant, and empty. A return value is
		    ignored. First call for reading part.
		}
	    }
	    tr valign=top {
		delete/read {
		    Cleanup state of transformation for read from channel. The
		    buffer is irrelevant, and empty. A return value is ignored.
		    Last call for reading part.
		}
	    }
	    tr valign=top {
		read {
		    Execute read transformation on the given buffer. The return
		    value is interpreted as transformation result. Normally the
		    inverse of the write transformation.
		}
	    }
	    tr valign=top {
		flush/read {
		    Flush out all buffers internal to the transformation. The
		    given buffer is empty. The return value is interpreted as
		    transformation result. Required to get buffered partial
		    results at EOF of the underlying channel.
		}
	    }
	    tr valign=top {
		clear/read {
		    Cleanup state of transformation for read from channel. The
		    buffer is irrelevant, and empty. A return value is ignored.
		    Called during seeks on the channel.
		}
	    }
	    tr valign=top {
		query/maxRead {
		    The transformation is queried for the maximum number of
		    bytes to read. This call is done just before reading more
		    data from the underlying. The return value has to be an
		    integer number. A negative value signal acceptance of
		    whatever number of characters the trf layer decides to
		    read.
		}
	    }
	    tr valign=top {
		query/ratio {
		    The transformation is queried for its natural seek ratio.
		    Called once after the creation of the transformation (and
		    its attachment to a channel). The return value has to be
		    a list containing at least 2 elements. The first two
		    elements of the list are interpreted as the natural ratio
		    of the transformation.
		}
	    }
	}

	p "
	Using this command under [tcl] 7.6 will yield incorrect
	results if the buffer to be transformed contains embbeded
	[strterm]'s."
    }
}
